JOIN

1. NATURAL JOIN
    select department_name,city
    from departments natural join locations;
    
2. JOIN with using clause

   select e.employee_id,e.last_name,department_id,d.department_name,
	e.manager_id, d.manager_id
	from employees e  join departments d
	using(department_id);
	
	
3. JOIN with on clause
   select e.employee_id,e.last_name,e.department_id,d.department_name,
	e.manager_id, d.manager_id as dept_manager_id
	from employees e  join departments d
	on e.department_id = d.department_id;
	
4. ansi 1999
    select e.employee_id,e.last_name,e.department_id,d.department_name,
	e.manager_id, d.manager_id as dept_manager_id
	from employees e, departments d
	where e.department_id = d.department_id;
     


emp
did -> Departments
               loc_Id  -> Locations
			                     country_id => countries
					
--join with more than 2 table

select * from countries;



select e.employee_id, e.last_name, e.department_id, d.department_name,
      l.city, c.country_name
from employees e join departments d
on e.department_id = d.department_id
join locations l
on d.location_id=l.location_id
join countries c
on c.country_id= l.country_id;


select e.employee_id, e.last_name, department_id, d.department_name,
      l.city, c.country_name
from employees e join departments d
using(department_id)
join locations l
using(location_id)
join countries c
using(country_id);



select e.employee_id, e.last_name, e.department_id, d.department_name,
      l.city, c.country_name
from employees e , departments d, locations l,countries c
where e.department_id = d.department_id
and d.location_id=l.location_id
and c.country_id= l.country_id;



Type of Join
1. Inner Join
2. Outer Join
   a. Left outer join
   b. right outer join
   c. full outer join
3. self join
4. equi join
5. non equi join
6. cross join



INNER JOIN
select e.employee_id,e.last_name,e.department_id,d.department_name
from employees e  join departments d
on e.department_id = d.department_id;

OUTER JOIN 
a. left outer join = inner join + all the rows of left table
    select e.employee_id,e.last_name,d.department_id,d.department_name
    from employees e  left outer join departments d
    on e.department_id = d.department_id;
    
    select e.employee_id,e.last_name,d.department_id,d.department_name
    from employees e  , departments d
    where e.department_id = d.department_id(+);
    
b. right outer join
   select e.employee_id,e.last_name,d.department_id,d.department_name
    from employees e  right outer join departments d
    on e.department_id = d.department_id;
    
    select e.employee_id,e.last_name,d.department_id,d.department_name
    from employees e  , departments d
    where e.department_id(+) = d.department_id;


c. full outer join
   select e.employee_id,e.last_name,d.department_id,d.department_name
    from employees e  full outer join departments d
    on e.department_id = d.department_id;
    
    select e.employee_id,e.last_name,d.department_id,d.department_name
    from employees e  , departments d
    where e.department_id(+) = d.department_id(+);
    --not feasible full outer join with 1999 syntax
    
SELF JOIN

select e.employee_id, e.last_name, e.manager_id, m.last_name as manager_name
from employees e left outer join employees m 
on e.manager_id = m.employee_id
order by e.employee_id;

NON_EQUI JOIN
select e.employee_id,e.last_name,e.salary, j.grade
 from employees e join job_grades j
 on e.salary between j.min_sal and j.max_sal
 
 CROSS JOIN
 select employee_id,last_name,department_name
 from employees e cross join departments d;
 
  select employee_id,last_name,department_name
 from employees e , departments d;




RULE
1. give qualifier to column_name if available in both table 
2. column part of USING clause cannot have qualifier



create table emp:
create table emp
as
select * from employees where department_id in (10,20,30);



Create and populate job_grade tables:
create table job_grades
(min_sal number,
 max_sal number,
 grade   char
 );
 
 insert into job_grades (min_sal,max_sal,grade) values (0,5000,'A');
 insert into job_grades (min_sal,max_sal,grade) values (5001,10000,'B');
 insert into job_grades (min_sal,max_sal,grade) values (10001,15000,'C');
 insert into job_grades (min_sal,max_sal,grade) values (15001,20000,'D');
 insert into job_grades (min_sal,max_sal,grade) values (20001,50000,'E');
